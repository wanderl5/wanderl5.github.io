(window.webpackJsonp=window.webpackJsonp||[]).push([[550],{1023:function(e,a,t){"use strict";t.r(a);var s=t(2),l=Object(s.a)({},(function(){var e=this,a=e._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h2",{attrs:{id:"tdsql迁移"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tdsql迁移"}},[e._v("#")]),e._v(" TDSQL迁移")]),e._v(" "),a("blockquote",[a("p",[e._v("感谢刘总提供资料")])]),e._v(" "),a("p",[e._v("中行信创项目，需要把oracle迁移到TDSQL，在C++版本ecas4.2迁移过程中碰到的问题和解决办法整理如下：")]),e._v(" "),a("p",[e._v("行里没有提供TDSQL客户端的安装文件，可以采用MySQL 5.7客户端连接TDSQL")]),e._v(" "),a("h2",{attrs:{id:"数据库建表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据库建表"}},[e._v("#")]),e._v(" 数据库建表：")]),e._v(" "),a("p",[e._v("1、不支持无主键表，必须把primary key 放在create table 的()中")]),e._v(" "),a("p",[e._v("2、类型转换\nNUMBER => INT  /  BIGINT\nVARCHAR2 => VARCHAR")]),e._v(" "),a("p",[e._v("TDSQL varchar默认大小写不敏感，字段需要配置collate，show collation可以查看所有collate\necas42用户名LOGONID字段增加collate utf8_bin的描述，使得大小写敏感")]),e._v(" "),a("p",[e._v("3、大小写敏感问题\nmysql下查看：\nshow variables like '%case%';\n+------------------------+-------+\n| Variable_name          | Value |\n+------------------------+-------+\n| lower_case_file_system | OFF   |\n| lower_case_table_names | 1     |\n+------------------------+-------+\nlower_case_file_system是数据目录所在的文件系统上文件名的区分大小写\nlower_case_table_names为0时大小写敏感，为1时不敏感")]),e._v(" "),a("p",[e._v('mysql在linux下默认大小写不敏感，但它没有把获取到的表名、字段名都转换为大写存储，select * 时获取数据字段名是原生态\n而ORACLE默认大写，ORACLE程序rs["字段名"]都大写。\n解决办法：\na、建表时表名、字段名都用大写！！\nb、sql语句中select字段名时统一用大写！\n这样做对原ORACLE程序改动最小。')]),e._v(" "),a("h2",{attrs:{id:"sql语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql语句"}},[e._v("#")]),e._v(" sql语句：")]),e._v(" "),a("p",[e._v("1、函数都要带()，函数名和()之间不能有空格、制表符\n如，SYSDATE 改为sysdate()")]),e._v(" "),a("p",[e._v("2、分页查询：\n少量数据用limit")]),e._v(" "),a("p",[e._v("3、递归查询\n用代码实现，或变成5层sql语句")]),e._v(" "),a("p",[e._v("4、AUTO_INCREMENT\n插入0或null时，自动采用类似oracle的nextval")]),e._v(" "),a("p",[e._v("5、数据导入，oracle c/s均为AMERICAN_AMERICA.AL32UTF8\n设置Linux终端字符集UTF8，通过exdata（不进行字符集转换）导出数据到屏幕和重定向文件，屏幕正常显示中文，vi文件用utf8码正常显示， ultredit编译文件正常显示\n重定向文件sql在mysql中用 source <文件名> 进行执行，之后查询出的数据中文显示正常\ntestQuery通过querym查得数据库中的中文通过MultiByteToWideChar转换后正常显示，和预期相符")]),e._v(" "),a("p",[e._v("sqlplus查服务器字符集，执行select userenv('language') from dual;\noracle客户端字符集，设置环境变量NLS_LANG和sqlplus查到的字符集一致\nvi字符集设置:set encoding=UTF8\nmysql跑的数据库脚本在头部需要指明字符集set names 'UTF8';")]),e._v(" "),a("p",[e._v("6、oracle建表utf8码的varchar2的数据长度和定义一致\nTDSQL建表varchar返回数据长度是定义长度的3倍！该varchar长度是以字符为单位的，数据的字节长度=varchar字符长度*3\n基于xnet的查询语句，原来没有数据包超长的问题的，可能变成TDSQL后数据长度变3倍，就可能有超长问题。\n采用char类型或latin1字符集也不能解决问题。")]),e._v(" "),a("p",[e._v("7、日期类型转换\ndate_format()、str_to_date()、date_diff()、time_to_sec()、adddate()")]),e._v(" "),a("p",[e._v("8、行锁\ninsert或update表需要select同一张表时，需要给后面的表名加个别名，否则报行锁错误。改了后的语句对oracle没影响")])])}),[],!1,null,null,null);a.default=l.exports}}]);