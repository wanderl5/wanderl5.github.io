(window.webpackJsonp=window.webpackJsonp||[]).push([[558],{1031:function(s,n,a){"use strict";a.r(n);var t=a(2),e=Object(t.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"mq基本介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mq基本介绍"}},[s._v("#")]),s._v(" MQ基本介绍")]),s._v(" "),n("p",[s._v("Websphere MQ是IBM公司的商业通信中间件。它提供一个具有工业标准，安全、可靠的消息传输系统，用以控制和管理一个集成的商业应用。Websphere MQ基本由一个消息传输体系和一套应用程序接口组成。")]),s._v(" "),n("h2",{attrs:{id:"队列管理器-queuemanager"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#队列管理器-queuemanager"}},[s._v("#")]),s._v(" 队列管理器（QueueManager）")]),s._v(" "),n("p",[n("strong",[s._v("队列管理器")]),s._v("是队列和其他对对象的容器。Websphere MQ的每一个部分都属于一个队列管理器，它是一个基本独立的执行单元，应用程序通过MQI编程接口向队列管理器申请服务，内含通道，队列等单元")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建队列治理器 （-q是指创建缺省的队列治理器）")]),s._v("\ncrtmqm "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-q")]),s._v(" QMgrName\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除队列治理器")]),s._v("\ndltmqm QmgrName\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显示队列治理器对象")]),s._v("\ndspmq "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-m")]),s._v(" QmgrName\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 运行MQSeries命令（进入队列管理器的命令行，里面可以输入命令做相关查看，修改等操作）")]),s._v("\nrunmqsc QmgrName\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 停止队列治理器")]),s._v("\nendmqm QmgrName "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#受控停止")]),s._v("\nendmqm "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-i")]),s._v(" QmgrName "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#立即停止")]),s._v("\nendmqm "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v(" QmgrName "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#强制停止")]),s._v("\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br")])]),n("p"),s._v(" "),n("h2",{attrs:{id:"通道-channel"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#通道-channel"}},[s._v("#")]),s._v(" 通道（Channel）")]),s._v(" "),n("p",[n("strong",[s._v("通道")]),s._v("，是一种提供从一个队列管理器到另外一个队列管理器的通信途径。它通过消息通道代理(Message Channel Agents)把两个队列管理器连接起来。消息通道可以分为6种类型：发送通道(Sender)、接受通道(Receiver)、服务器通道(Server)、请求器通道(Requester)、群集发送通道(Cluster Sender)和群集接受通道(Cluster Receiver)：")]),s._v(" "),n("p",[s._v("SDR（发送通道）、SVR、RCVR（接收）、RQSTR、CLNTCONN（客户端链接）、SVRCONN（服务端连接通道，一般程序连接MQ使用此类型）、CLUSSDR和CLUSRCVR。")]),s._v(" "),n("p",[s._v("确保队列之间的消息传递。包括队列管理与调度、消息传达，并保证网络故障后的恢复。传输系统由队列、队列管理器、通道、进程、群集以及其他部分组成。")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建发送方通道")]),s._v("\nDEFINE CHANNEL（SDRNAME） CHLTYPE（SDR）+\nCONNAME（‘100.100.100.215"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1418")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("’） XMITQ（QTNAME） REPLACE\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 其中可以是：")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建接收方通道")]),s._v("\nDEFINE CHANNEL（SDR_ TEST） CHLTYPE（RCVR） REPLACE\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建服务器连接通道")]),s._v("\nDEFINE CHANNEL（SVRCONNNAME） CHLTYPE（SVRCONN） REPLACE\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动通道")]),s._v("\nrunmqchl "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" ChlName "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-m")]),s._v(" QmgrName "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])]),n("h3",{attrs:{id:"关于通道的额外说明"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#关于通道的额外说明"}},[s._v("#")]),s._v(" "),n("em",[n("strong",[s._v("*关于通道的额外说明：*")])])]),s._v(" "),n("p",[s._v("通道是MQ的关键，主要包括手动方式启动和自动方式（触发）启动。")]),s._v(" "),n("p",[s._v("手动方式：手动方式维护有两个通道参数值得注意：")]),s._v(" "),n("p",[s._v("1）"),n("strong",[s._v("DISCINT（Disconnect Interval， 断开间隔）")])]),s._v(" "),n("p",[s._v("当传输队列中没有消息要传送时， 发送方通道(SDR)、服务器通道(SVR)将在等待了该 参数指定的时间间隔后断开连接，停止通道。该参数以秒为单位，定义新的通道时，如果没有特别指定，该参数会继承系统对象的属性，设为6000秒，约两个小时。亦通道连续两个小时没有消息发送后就会停止。"),n("strong",[s._v("DISCINT参数设定为0，通道永远不会停止")]),s._v("。")]),s._v(" "),n("p",[s._v("2）"),n("strong",[s._v("HBINT(Heart Beat Interval,心跳间隔)")])]),s._v(" "),n("p",[s._v("当传输队列中没有消息要传送时，"),n("strong",[s._v("发送方通道")]),s._v("("),n("strong",[s._v("SDR")]),s._v(")、"),n("strong",[s._v("服务器通道")]),s._v("("),n("strong",[s._v("SVR")]),s._v(")定时向对方发送心跳测试信号，双方通道借这个信号作消息发送事务的同步(quiesce)。通常这个参数的值要比DISCINT参数的值小很多，让通道程序有机会在停止之前作多次的事务同步较验。")]),s._v(" "),n("p",[s._v("假如系统管理员为了避免反复重新启动通道而把"),n("strong",[s._v("DISCINT参数设定为0")]),s._v("，但通道运行期间网络线路发生了故障，"),n("strong",[s._v("通讯双方不能交换心跳信号，通道也会停止")]),s._v("， 仍然要求系统管理员监控网络线路状态和通道状态，在网络线路恢复后重新启动。也可以编写专门的监控程序自动执行这些工作，但都比较复杂。")]),s._v(" "),n("p",[s._v("系统管理员不能因为交换心跳信号失败会导致通道停止就把HBINT设为0或设为极大的值，当有消息要通过通道发送出去，但网络线路又发生故障时，"),n("strong",[s._v("发送通道会停止，但接收通道不会停止")]),s._v("。所以下次系统管理员再启动通道时会发现MQ报告出错信息“"),n("strong",[s._v("远程节点不可用或资源不足")]),s._v("”，这不是因为远程节点的连接有问题，或内存资源不足，而是因为远程节点上的接收通道没有停止，启动发送通道时发现对方节点上同名的通道还在运行，就禁止本地的发送通道启动。系统管理员只好在远程节点上停止接收通道(用STOP CHANNEL 命令)。")]),s._v(" "),n("p",[s._v("正常情况下并不推荐使用STOP CHANNEL命令，该命令把通道置于STOPPED状态，实际上是不可用状态。为了重新使用该通道，系统管理员要输入START CHANNEL 命令，但这条命令并没有真正地启动通道，要在发送方输入START CHANNEL命令才能启动通道。必须注意的是，"),n("strong",[s._v("STOP CHANNEL命令与START CHANNEL命令对接收通道都是没有实际意义的，只是修改了通道的状态")]),s._v("。")]),s._v(" "),n("h2",{attrs:{id:"mq侦听"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mq侦听"}},[s._v("#")]),s._v(" MQ侦听")]),s._v(" "),n("p",[s._v("MQ队列必须对外启动侦听端口，且保证网络联通，才允许外界通过此侦听端口进行访问；")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动侦听")]),s._v("\nrunmqlsr "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-t")]),s._v(" TYPE "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v(" PORT "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-m")]),s._v(" QMgrName\nrunmqlsr "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-t")]),s._v(" tcp "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1818")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-m")]),s._v(" QM_MUREX_PPS "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 停止侦听")]),s._v("\nendmqlsr "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-m")]),s._v(" QmgrName\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p"),s._v(" "),n("h2",{attrs:{id:"队列-queue"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#队列-queue"}},[s._v("#")]),s._v(" 队列（Queue）")]),s._v(" "),n("p",[s._v("​\t队列是消息的存储场所。消息存放在队列中，应用程序可以相互独立的运行，以不同的速度、在不同的时间地点进行消息通信。队列按照功能划分，主要包含十个大类：本地队列、远程队列、传输队列、动态与模板队列、启动队列、群集传输队列、死信队列、命令队列、回复队列与别名队列。")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("本地队列(localQueue): 本地队列是实际在本地存储消息的地方")])]),s._v(" "),n("li",[n("p",[s._v("本地传输队列(XMITQ): 传输信息的队列，与remoteQueue关联")])]),s._v(" "),n("li",[n("p",[s._v("远程队列（RemoteQueue)： 非实际存储数据的队列，主要用于发送数据")])]),s._v(" "),n("li",[n("p",[s._v("死信队列（DeadQueue)： 消息发送失败存储的位置")])])]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 定义本地队列")]),s._v("\nDEFINE QL（NFXS.QES.Deal） REPLACE\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 定义本地传输队列")]),s._v("\nDEFINE QLOCAL"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("QE.XMITQ"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" USAGE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("XMITQ"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" DEFPSIST"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("YES"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" +\nINITQ（SYSTEM.CHANNEL.INITQ）+\nPROCESS"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("PROCESSNAME"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" REPLACE\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 远程队列定义")]),s._v("\nDEFINE QREMOTE（NFXS.QES.RemoteQ） +\nRNAME（AAA） RQMNAME（QMGRNAME） +\nXMITQ（QTNAME）\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 定义死信队列")]),s._v("\nDEFINE QLOCAL（QNAME） DEFPSIST（YES） REPLACE\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设定队列治理器的死信队列")]),s._v("\nALTER QMGR DEADQ（QNAME）\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除队列")]),s._v("\nDELETE QLOCAL（QNAME）\nDELETE QREMOTE（QRNAME）\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 清除队列中的所有消息")]),s._v("\nCLEAR QLOCAL（QNAME）\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 更改属性")]),s._v("\nALTER QMGR DESCR（‘NEW DESCRIPTION’）\nALTER QLOCAL（QNAME） PUT（DISABLED）\nALTER QALIAS（QNAME） TARGQ（TARGQNAME）\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显示队列的所有属性")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("DISPLAY")]),s._v(" QUEUE（QNAME） "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("ALL"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显示队列的所选属性")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("DISPLAY")]),s._v(" QUEUE（QNAME） DESCR GET PUT\n"),n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("DISPLAY")]),s._v(" QUEUE（QNAME）MAXDEPTH CURDEPTH\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br")])]),n("h2",{attrs:{id:"mq-触发器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mq-触发器"}},[s._v("#")]),s._v(" MQ 触发器")]),s._v(" "),n("h3",{attrs:{id:"一、触发器原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一、触发器原理"}},[s._v("#")]),s._v(" 一、触发器原理")]),s._v(" "),n("p",[s._v("触发（Triggering），是一种自动启动应用程序的机制。")]),s._v(" "),n("p",[s._v("队列管理器把某种条件称为触发事件。如果队列被设置为触发类型，并且触发事件发生了，那么队列管理器将发送一个触发消息到一个称作启动队列的队列中。触发消息被放置到启动队列的过程意味着产生了触发事件。")]),s._v(" "),n("p",[s._v("处理队列管理器中的消息是触发监控程序(Trigger-Monitor Application)，他的工作是读取触发消息并根据触发消息的信息做出相应的处理。触发监控程序没有什么特殊，它只不过是启动队列读取消息的应用程序。")]),s._v(" "),n("p",[s._v("当队列管理器发现由一条消息到达被触发的队列之后，它产生的触发消息将被存放到启动队列中，触发监控程序将从启动队列中取出触发消息，并根据触发消息中的内容，启动相应的消息处理程序来处理被触发队列中的消息。")]),s._v(" "),n("p",[s._v("触发所涉及的对象如下：")]),s._v(" "),n("p",[s._v("1 应用队列：一个本地队列并设置为可触发。当触发条件满足时，将会产生触发消息。")]),s._v(" "),n("p",[s._v("2 进程定义：一个应用队列可能由一个进程定义对象和它关联。进程定义中包含应用程序的信息。该应用程序负责从应用队列中取出消息。")]),s._v(" "),n("p",[s._v("3 传输队列：如果用触发方式来启动通道，则需要一个传输队列。在传输队列的TriggerData属性中设置为将被启动的通道名，这将省略进程的定义。")]),s._v(" "),n("p",[s._v("4 触发事件：它是一种引起队列管理器产生触发消息的事件。")]),s._v(" "),n("p",[s._v("5 触发消息：当触发事件发生时，队列管理器将产生触发消息。触发信息来自于应用队列和于应用队列关联的进程定义，它包含了将要被启动的程序名。")]),s._v(" "),n("p",[s._v("6 启动队列：一个本地队列。被用来存发触发消息的队列。一个队列管理器可用拥有多个启动队列。一个启动队列可以为多个应用队列服务。")]),s._v(" "),n("p",[s._v("7 "),n("strong",[s._v("触发监控器")]),s._v("：是一个持续运行的程序，当一个触发消息到达启动队列时，触发监控器获取触发消息，并利用触发消息中的信息，启动应用程序来处理应用队列中的消息，并把触发消息头发送传递给应用程序，消息头中包含应用队列名。")]),s._v(" "),n("p",[s._v("在所有平台上，都有一个特殊的触发监控器叫做"),n("strong",[s._v("通道启动器")]),s._v("（"),n("strong",[s._v("Channel Initator")]),s._v("），它的作用就是启动通道。")]),s._v(" "),n("h3",{attrs:{id:"二、触发类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#二、触发类型"}},[s._v("#")]),s._v(" 二、触发类型")]),s._v(" "),n("p",[s._v("1、EVERY：")]),s._v(" "),n("p",[s._v("应用队列中每接受到一个消息时，都将产生触发消息。如果应用程序仅仅处理一个消息就结束，可采用这种触发类型。")]),s._v(" "),n("p",[s._v("2、FIRST：")]),s._v(" "),n("p",[s._v("应用队列中消息从0变为1时会触发事件。如果当队列中的一个消息到达时启动程序，直到处理完所有消息才结束，则采用这种触发类型。")]),s._v(" "),n("p",[s._v("3、DEPTH：")]),s._v(" "),n("p",[s._v("​    应用队列中消息数目和TriggerDepth（引起触发事件发生时，队列中的消息数目）属性值相同时，才会产生触发事件。当一系列请求的回复都收到时，才启动应用程序，则可以采用这种方法。")]),s._v(" "),n("p",[s._v("​    需要注意的时，当DEPTH属性值为0的时候，实际上就形成了同步通信。另外，当采用Depth触发时，产生触发消息以后，队列将被修改为非触发方式，如果需要再次触发，需要重新设置成允许触发。")]),s._v(" "),n("p",[s._v("​\t 一般而言，在实际应用中，如果通道设置成触发方式，触发类型往往设置成为FIRST和DEPTH。")]),s._v(" "),n("h3",{attrs:{id:"三、触发器工作流程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#三、触发器工作流程"}},[s._v("#")]),s._v(" 三、触发器工作流程")]),s._v(" "),n("p",[s._v("1、本地或远程应用程序A，往应用队列(Application Queue)中PUT了一条消息。")]),s._v(" "),n("p",[s._v("2、当队列原来深度为0时（队列为空），这时PUT一条消息到队列中将形成触发事件，同时产生一条触发消息，触发消息中将包含进程定义中的信息。")]),s._v(" "),n("p",[s._v("3、队列管理器创建触发消息，并把它PUT入与应用队列相关的启动队列Initiation Queue。")]),s._v(" "),n("p",[s._v("4、触发监控器(Trigger Monitor)从启动队列(Initiation Queue)中GET触发消息。")]),s._v(" "),n("p",[s._v("5、触发监控器处理触发消息，发出启动应用程序B的命令。")]),s._v(" "),n("p",[s._v("6、应用程序B打开应用队列(Application Queue)，并处理队列中的消息。")]),s._v(" "),n("h1",{attrs:{id:"命令行手动实现mq数据交互"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#命令行手动实现mq数据交互"}},[s._v("#")]),s._v(" 命令行手动实现MQ数据交互")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 往队列中放消息")]),s._v("\namqsput QName QmgrName\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 从队列中取出消息")]),s._v("\namqsget QName QmgrName\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h2",{attrs:{id:"其他命令"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#其他命令"}},[s._v("#")]),s._v(" 其他命令")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(".运行文本中的MQSC命令\nrunmqsc "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" myprog.in，使用重定向\n文件每行不要超过72字符，例子文本：\namqscos0.tst：Definitions of objects used by sample programs；\namqscic0.tst：Definitions of queues "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" CICS transactions。\n所在目录：\nmqmtop/samp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("UNIX"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("；\nmqmtop"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("tools"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("mqsc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("samples"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("WIN"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("。\n校验文本：\nrunmqsc "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-v")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" myprog.in "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" myprog.out\n不能校验远程队列管理器。\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(".定义本地队列"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("loacl queue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nDEFINE QLOCAL "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ORANGE.LOCAL.QUEUE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" + 名称\n  DESCR"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Queue for messages'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" +      描述\n  PUT "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("DISABLED"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" +                   不允许put\n  GET "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ENABLED"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" +                    允许get\n  NOTRIGGER +                        不产生trigger\n  MSGDLVSQ "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("FIFO"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" +                  使用FIFO模式\n  MAXDEPTH "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" +                  最多1000个消息\n  MAXMSGL "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" +                   每个消息最大2000字节\n  USAGE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("NORMAL"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                     普通队列"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("非transmission queue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(".定义a dead-letter queue\n两种方法：\n在crtmqm中指定-u选项； \n使用ALTER QMGR命令。 \nDead-letter队列必须是一个本地队列，而且其MAXMSGL参数必须足够大，能存放当前最大的消息。\n一个例子是：SYSTEM.DEAD.LETTER.QUEUE，在建立队列管理器时自动创建。\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(".显示队列的缺省属性\n有一个系统队列：SYSTEM.DEFAULT.LOCAL.QUEUE，用户没指定的属性都从它复制过来。所以命令如下：\n"),n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("DISPLAY")]),s._v(" QUEUE "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("SYSTEM.DEFAULT.LOCAL.QUEUE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(".显示队列的属性\n"),n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("DISPLAY")]),s._v(" QUEUE "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ORANGE.LOCAL.QUEUE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" +\nMAXDEPTH +\nMAXMSGL +\nCURDEPTH"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n显示队列ORANGE.LOCAL.QUEUE的MAXDEPTH、MAXMSGL和CURDEPTH。其中CURDEPTH队列的当前深度，即当前在队列的消息数量。\n不指定具体的属性名称则显示所有属性：\n"),n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("DISPLAY")]),s._v(" QUEUE "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ORANGE.LOCAL.QUEUE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(".复制队列的定义\n定义队列MAGENTA.QUEUE，其属性与ORANGE.LOCAL.QUEUE相同：\nDEFINE QLOCAL "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("MAGENTA.QUEUE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" +\nLIKE "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ORANGE.LOCAL.QUEUE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n在复制的同时也可进行修改：\nDEFINE QLOCAL "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("THIRD.QUEUE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" +\nLIKE "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ORANGE.LOCAL.QUEUE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" +\nMAXMSGL"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1024")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n当定义一个没有使用LIKE的队列时，其实际等于：\nDEFINE LIKE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("SYSTEM.DEFAULT.LOCAL.QUEUE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(".修改本地队列的属性\n有两种方法，但效果不同：\nALTER QLOCAL； \nDEFINE QLOCAL，使用REPLACE。 \nALTER QLOCAL "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ORANGE.LOCAL.QUEUE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" +\nMAXMSGL"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("；\n修改MAXMSGL属性，其他保持不变。\nDEFINE QLOCAL "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ORANGE.LOCAL.QUEUE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" +\nMAXMSGL"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" REPLACE；\n不仅仅修改了MAXMSGL，其他属性都被缺省值覆盖。\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(".清空本地队列\n删除队列中的所有消息：\nCLEAR QLOCAL "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("MAGENTA.QUEUE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n当队列中有未提交的消息，或还有应用程序打开队列时，无法清空。\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(".删除一个本地队列\nDELETE QLOCAL "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("PINK.QUEUE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("；\n不能删除有未提交的消息的队列。\n使用PURGE可以删除含有已提交消息的队列：\nDELETE QLOCAL "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("PINK.QUEUE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" PURGE\n使用UNPURGE不可以删除含有已提交消息的队列。\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("14")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(".浏览"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("browse"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("队列中的内容\n程序和源代码：\nUNIX：Source：mqmtop/samp/amqsbcg0.c；\nExecutable：mqmtop/samp/bin/amqsbcg。\nWINDOWS：Source：c:"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("mqm"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("tools"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("samples"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("amqsbcg0.c；\nExecutable：c:"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("mqm"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("tools"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("samples"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("bin"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("amqsbcg.exe。\n使用时指定两个参数，队列名和队列管理器名：\namqsbcg SYSTEM.ADMIN.QMGREVENT.tpp1 saturn.queue.manager\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("15")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(".定义别名"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("an "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("alias")]),s._v(" queue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nDEFINE QALIAS "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("MY.ALIAS.QUEUE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" TARGQ +\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("YELLOW.QUEUE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("；\n定义队列YELLOW.QUEUE的别名MY.ALIAS.QUEUE。\nALTER QALIAS "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("MY.ALIAS.QUEUE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" TARGQ +\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("MAGENTA.QUEUE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("；\n可以修改别名使其指向别的队列。\n定义别名可修改属性，使同一个对列不同的别名有不同的属性：\nDEFINE QALIAS "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ALPHAS.ALIAS.QUEUE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" +\nTARGQ "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("YELLOW.QUEUE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" +\nPUT "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ENABLED"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" +\nGET "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("DISABLED"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\nDEFINE QALIAS "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("BETAS.ALIAS.QUEUE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" +\nTARGQ "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("YELLOW.QUEUE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" +\nPUT "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("DISABLED"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" +\nGET "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ENABLED"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n也可使用LIKE和REPLACE来定义别名。\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("16")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(".使用别名的其他命令\n"),n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("DISPLAY")]),s._v(" QUEUE "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ALPHAS.ALIAS.QUEUE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("；\n\nALTER QALIAS "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ALPHAS.ALIAS.QUEUE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" +\nTARGQ"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ORANGE.LOCAL.QUEUE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" FORCE\n\nDELETE QALIAS "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ALPHAS.ALIAS.QUEUE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("；\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("17")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(".定义model队列\nmodel队列提供一个模板，当请求该类队列时，由队列管理器动态产生一个队列。\n定义方法同定义本地队列，此外，还可指定动态队列是临时temporary或永久的permanent。\nDEFINE QMODEL "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("GREEN.MODEL.QUEUE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" +\n  DESCR"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Queue for messages from application X'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" +\n  PUT "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("DISABLED"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" +\n  GET "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ENABLED"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" +\n  NOTRIGGER +\n  MSGDLVSQ "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("FIFO"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" +\n  MAXDEPTH "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" +\n  MAXMSGL "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" +\n  USAGE "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("NORMAL"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" +\n  DEFTYPE "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("PERMDYN"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n其中DEFTYPE指定产生的动态队列是permanent dynamic queues。\n缺省属性来源于SYSYTEM.DEFAULT.MODEL.QUEUE。\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(".使用model的其他命令\n"),n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("DISPLAY")]),s._v(" QUEUE "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("GREEN.MODEL.QUEUE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("；\n\nALTER QMODEL "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("BLUE.MODEL.QUEUE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" PUT"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ENABLED"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("；\n\nDELETE QMODEL "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("RED.MODEL.QUEUE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("；\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("19")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(".定义应用队列的triggering\nDEFINE QLOCAL "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("MOTOR.INSURANCE.QUEUE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" +\n  PROCESS "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("MOTOR.INSURANCE.QUOTE.PROCESS"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" + trigger产生时执行的应用\n  MAXMSGL "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" +\n  DEFPSIST "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("YES"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" +\n  INITQ "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("MOTOR.INS.INIT.QUEUE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" + initiation queue名，放trigger消息\n  TRIGGER +                   使用trigger\n  TRIGTYPE "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("DEPTH"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" +   指定trigger发生的事件：超过TRIGDPTH\n  TRIGDPTH "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("+      产生trigger的消息数量\n  TRIGMPRI "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("；        计算消息的最低优先级\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(".定义initiation queue\n当trigger事件发生时，放置trigger消息在initiation queue中。\n定义方法同local queue，可类似如下定义：\nDEFINE QLOCAL"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("MOTOR.INS.INIT.QUEUE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" +\n  GET "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ENABLED"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" +\n  NOSHARE +\n  NOTRIGGER +\n  MAXMSGL "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" +\n  MAXDEPTH "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br"),n("span",{staticClass:"line-number"},[s._v("64")]),n("br"),n("span",{staticClass:"line-number"},[s._v("65")]),n("br"),n("span",{staticClass:"line-number"},[s._v("66")]),n("br"),n("span",{staticClass:"line-number"},[s._v("67")]),n("br"),n("span",{staticClass:"line-number"},[s._v("68")]),n("br"),n("span",{staticClass:"line-number"},[s._v("69")]),n("br"),n("span",{staticClass:"line-number"},[s._v("70")]),n("br"),n("span",{staticClass:"line-number"},[s._v("71")]),n("br"),n("span",{staticClass:"line-number"},[s._v("72")]),n("br"),n("span",{staticClass:"line-number"},[s._v("73")]),n("br"),n("span",{staticClass:"line-number"},[s._v("74")]),n("br"),n("span",{staticClass:"line-number"},[s._v("75")]),n("br"),n("span",{staticClass:"line-number"},[s._v("76")]),n("br"),n("span",{staticClass:"line-number"},[s._v("77")]),n("br"),n("span",{staticClass:"line-number"},[s._v("78")]),n("br"),n("span",{staticClass:"line-number"},[s._v("79")]),n("br"),n("span",{staticClass:"line-number"},[s._v("80")]),n("br"),n("span",{staticClass:"line-number"},[s._v("81")]),n("br"),n("span",{staticClass:"line-number"},[s._v("82")]),n("br"),n("span",{staticClass:"line-number"},[s._v("83")]),n("br"),n("span",{staticClass:"line-number"},[s._v("84")]),n("br"),n("span",{staticClass:"line-number"},[s._v("85")]),n("br"),n("span",{staticClass:"line-number"},[s._v("86")]),n("br"),n("span",{staticClass:"line-number"},[s._v("87")]),n("br"),n("span",{staticClass:"line-number"},[s._v("88")]),n("br"),n("span",{staticClass:"line-number"},[s._v("89")]),n("br"),n("span",{staticClass:"line-number"},[s._v("90")]),n("br"),n("span",{staticClass:"line-number"},[s._v("91")]),n("br"),n("span",{staticClass:"line-number"},[s._v("92")]),n("br"),n("span",{staticClass:"line-number"},[s._v("93")]),n("br"),n("span",{staticClass:"line-number"},[s._v("94")]),n("br"),n("span",{staticClass:"line-number"},[s._v("95")]),n("br"),n("span",{staticClass:"line-number"},[s._v("96")]),n("br"),n("span",{staticClass:"line-number"},[s._v("97")]),n("br"),n("span",{staticClass:"line-number"},[s._v("98")]),n("br"),n("span",{staticClass:"line-number"},[s._v("99")]),n("br"),n("span",{staticClass:"line-number"},[s._v("100")]),n("br"),n("span",{staticClass:"line-number"},[s._v("101")]),n("br"),n("span",{staticClass:"line-number"},[s._v("102")]),n("br"),n("span",{staticClass:"line-number"},[s._v("103")]),n("br"),n("span",{staticClass:"line-number"},[s._v("104")]),n("br"),n("span",{staticClass:"line-number"},[s._v("105")]),n("br"),n("span",{staticClass:"line-number"},[s._v("106")]),n("br"),n("span",{staticClass:"line-number"},[s._v("107")]),n("br"),n("span",{staticClass:"line-number"},[s._v("108")]),n("br"),n("span",{staticClass:"line-number"},[s._v("109")]),n("br"),n("span",{staticClass:"line-number"},[s._v("110")]),n("br"),n("span",{staticClass:"line-number"},[s._v("111")]),n("br"),n("span",{staticClass:"line-number"},[s._v("112")]),n("br"),n("span",{staticClass:"line-number"},[s._v("113")]),n("br"),n("span",{staticClass:"line-number"},[s._v("114")]),n("br"),n("span",{staticClass:"line-number"},[s._v("115")]),n("br"),n("span",{staticClass:"line-number"},[s._v("116")]),n("br"),n("span",{staticClass:"line-number"},[s._v("117")]),n("br"),n("span",{staticClass:"line-number"},[s._v("118")]),n("br"),n("span",{staticClass:"line-number"},[s._v("119")]),n("br"),n("span",{staticClass:"line-number"},[s._v("120")]),n("br"),n("span",{staticClass:"line-number"},[s._v("121")]),n("br"),n("span",{staticClass:"line-number"},[s._v("122")]),n("br"),n("span",{staticClass:"line-number"},[s._v("123")]),n("br"),n("span",{staticClass:"line-number"},[s._v("124")]),n("br"),n("span",{staticClass:"line-number"},[s._v("125")]),n("br"),n("span",{staticClass:"line-number"},[s._v("126")]),n("br"),n("span",{staticClass:"line-number"},[s._v("127")]),n("br"),n("span",{staticClass:"line-number"},[s._v("128")]),n("br"),n("span",{staticClass:"line-number"},[s._v("129")]),n("br"),n("span",{staticClass:"line-number"},[s._v("130")]),n("br"),n("span",{staticClass:"line-number"},[s._v("131")]),n("br"),n("span",{staticClass:"line-number"},[s._v("132")]),n("br"),n("span",{staticClass:"line-number"},[s._v("133")]),n("br"),n("span",{staticClass:"line-number"},[s._v("134")]),n("br"),n("span",{staticClass:"line-number"},[s._v("135")]),n("br"),n("span",{staticClass:"line-number"},[s._v("136")]),n("br"),n("span",{staticClass:"line-number"},[s._v("137")]),n("br"),n("span",{staticClass:"line-number"},[s._v("138")]),n("br"),n("span",{staticClass:"line-number"},[s._v("139")]),n("br"),n("span",{staticClass:"line-number"},[s._v("140")]),n("br"),n("span",{staticClass:"line-number"},[s._v("141")]),n("br")])])])}),[],!1,null,null,null);n.default=e.exports}}]);