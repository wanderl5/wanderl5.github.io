(window.webpackJsonp=window.webpackJsonp||[]).push([[214],{631:function(a,t,s){"use strict";s.r(t);var r=s(2),e=Object(r.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"algs4"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#algs4"}},[a._v("#")]),a._v(" algs4")]),a._v(" "),t("h2",{attrs:{id:"问题情况"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#问题情况"}},[a._v("#")]),a._v(" 问题情况")]),a._v(" "),t("p",[a._v("在学习《算法》第四版时需要在Java项目中引入一个第三方包stdlib.jar （from https://algs4.cs.princeton.edu/10fundamentals/ ），一开始我直接在Project Structure ->Modules ->Dependencies中添加这个jar包，结果发现在我新建的package中的类访问不到这个jar包中的类，只有在src根目录下的类可以访问，并且访问时显示类是来自defualt package")]),a._v(" "),t("h2",{attrs:{id:"问题原因"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#问题原因"}},[a._v("#")]),a._v(" 问题原因")]),a._v(" "),t("p",[a._v("因为打开stdlib.jar可以看到，与一般的jar包不同，其下的类没有一个包名，所有的类是直接在stdlib.jar目录下，在被有包结构的类引用时，会被当成本包内的类，即编译器会在本包目录下查找默认包中的类，自然是找不到的。而由于没有包名，也无法使用import导入。")]),a._v(" "),t("h2",{attrs:{id:"解决方案"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#解决方案"}},[a._v("#")]),a._v(" 解决方案")]),a._v(" "),t("ul",[t("li",[a._v("方案一：")])]),a._v(" "),t("p",[a._v("下载code zip包,algs4-master,把src下从edu开始的内容整个源码拷贝到工程下作为一个package，加入后，IDEAL会自动识别并加入相关import;")]),a._v(" "),t("ul",[t("li",[a._v("方案二：  #第三方jar包引入\n如果你和我一样是在学习《算法》时使用stdlib.jar包遇到的这个问题，那么我推荐直接到”“https://github.com/kevin-wayne/algs4“ 直接下载algs4.jar包(http://algs4.cs.princeton.edu/code/algs4.jar) ;\njar包引入工程的步骤: File->Project Structure -> Modules(Dependencies) 加入algs4.jar;\n引入后，在无源码情况下即可直接访问;")])])])}),[],!1,null,null,null);t.default=e.exports}}]);