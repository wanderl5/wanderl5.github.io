(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{367:function(t,a,s){t.exports=s.p+"assets/img/2023-02-11-23-04-38.8f9ef962.png"},368:function(t,a,s){t.exports=s.p+"assets/img/2023-02-11-23-07-50.dff11c54.png"},755:function(t,a,s){"use strict";s.r(a);var r=s(2),i=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"动机-motivation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#动机-motivation"}},[t._v("#")]),t._v(" 动机(Motivation)")]),t._v(" "),a("ul",[a("li",[t._v('某种场景下可能会"过度使用继承来扩展对象功能",由于继承为类型引入的静态特性,使得扩展方式缺乏灵活性,且随着子类的增多，各种子类的组合会导致子类的膨胀')])]),t._v(" "),a("h2",{attrs:{id:"要点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#要点"}},[t._v("#")]),t._v(" 要点")]),t._v(" "),a("ul",[a("li",[t._v("动态(组合)地给对象增加额外职责，，比生成子类更为灵活,消除代码重复，减少子类个数;")]),t._v(" "),a("li",[t._v("装饰类: 某个类既继承自某个父类,又将父类组合到自身对象中作为成员引入;")])]),t._v(" "),a("h2",{attrs:{id:"实现方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现方式"}},[t._v("#")]),t._v(" 实现方式")]),t._v(" "),a("h3",{attrs:{id:"一般过程编码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一般过程编码"}},[t._v("#")]),t._v(" 一般过程编码")]),t._v(" "),a("p",[a("img",{attrs:{src:s(367),alt:"2023-02-11-23-04-38.png"}})]),t._v(" "),a("ul",[a("li",[t._v("将buffered和Crypto都已继承方式去构建,导致组合形成非常多的子类")])]),t._v(" "),a("h3",{attrs:{id:"使用模式编码-单个观察者"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用模式编码-单个观察者"}},[t._v("#")]),t._v(" 使用模式编码(单个观察者)")]),t._v(" "),a("p",[a("img",{attrs:{src:s(368),alt:"2023-02-11-23-07-50.png"}})]),t._v(" "),a("ul",[a("li",[t._v("由继承调整为装饰(组合关系);")])])])}),[],!1,null,null,null);a.default=i.exports}}]);